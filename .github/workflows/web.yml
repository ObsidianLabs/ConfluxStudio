name: Build Web

on:
  push:
    branches:
      - master

  workflow_dispatch:

env:
  owner: ObsidianLabs
  own_components: conflux-components
  share_components: electron-components
  eth_components: eth-components
  project_build: conflux
  project_name: Conflux Studio
  project_build_script: yarn && PUBLIC_URL=/ CDN=true yarn build:react

jobs:
  # Build and release
  release:
    runs-on: ubuntu-18.04

    steps:
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Checkout ${{ env.share_components }}
        uses: actions/checkout@v2
        with:
          repository: ${{ env.owner }}/${{ env.share_components }}
          ref: master
          path: ./${{ env.share_components }}
          token: ${{ secrets.obsidians_token }}

      - name: Checkout ${{ env.eth_components }}
        uses: actions/checkout@v2
        with:
          repository: ${{ env.owner }}/${{ env.eth_components }}
          ref: master
          path: ./${{ env.eth_components }}
          token: ${{ secrets.obsidians_token }}

      - name: Checkout ${{ env.own_components }}
        uses: actions/checkout@v2
        with:
          repository: ${{ env.owner }}/${{ env.own_components }}
          ref: master
          path: ./${{ env.own_components }}
          token: ${{ secrets.obsidians_token }}

      - name: Checkout ${{ env.project_name }}
        uses: actions/checkout@v2
        with:
          ref: master
          path: ./studio

      - name: Install ${{ env.share_components }} submodule
        working-directory: ./${{ env.share_components }}
        run: git submodule update --init

      - name: Install ${{ env.share_components }} dependencies
        working-directory: ./${{ env.share_components }}
        run: yarn

      - name: Build ${{ env.share_components }}
        working-directory: ./${{ env.share_components }}
        run: yarn build

      - name: Install ${{ env.eth_components }} submodule
        working-directory: ./${{ env.eth_components }}
        run: git submodule update --init

      - name: Install ${{ env.eth_components }} dependencies
        working-directory: ./${{ env.eth_components }}
        run: yarn

      - name: Build ${{ env.eth_components }}
        working-directory: ./${{ env.eth_components }}
        run: yarn build

      - name: Install ${{ env.own_components }} submodule
        working-directory: ./${{ env.own_components }}
        run: git submodule update --init

      - name: Install ${{ env.own_components }} dependencies
        working-directory: ./${{ env.own_components }}
        run: yarn

      - name: Build ${{ env.own_components }}
        working-directory: ./${{ env.own_components }}
        run: yarn build

      - name: Build ${{ env.project_name }}
        uses: ObsidianLabs/studio-build-action@master
        with:
          build: ${{ env.project_build }}
          project_name: ${{ env.project_name }}
          build_script: ${{ env.project_build_script }}
          working-directory: ./studio
          fontawesome_token: ${{ secrets.fontawesome_token }}
          mac_certs: ${{ secrets.certs }}
          mac_certs_password: ${{ secrets.certs_password }}
          windows_certs: ${{ secrets.certs }}
          windows_certs_password: ${{ secrets.certs_password }}
          github_token: ${{ github.token }}

      - name: Create placeholder for COS
        run: echo cos > ./.placeholder

      - name: Upload to COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload ./.placeholder / && delete -r -f / && upload -r ./studio/build/ /
          secret_id: ${{ secrets.tencent_cloud_secretid }}
          secret_key: ${{ secrets.tencent_cloud_secretkey }}
          bucket: ${{ secrets.cos_bucket }}
          region: ${{ secrets.cos_region }}
